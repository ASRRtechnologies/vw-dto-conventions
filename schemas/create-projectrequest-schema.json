{
  "type": "object",
  "title": "Project Request Schema for adding a request to an existing project",
  "required": [
    "projectName",
    "name",
    "author",
    "source",
    "wip",
    "outputLocations",
    "company",
    "configuration"
  ],
  "properties": {
    "projectName": {
      "type": "string",
      "pattern": "^(.*)$",
      "description": "The name of the project this request belongs to"
    },
    "name": {
      "type": "string",
      "description": "The name of the projectrequest"
    },
    "author": {
      "type": "string",
      "description": "The login name of the person who submitted the request"
    },
    "phase": {
      "type": "string",
      "description": "The current phase of the project",
      "enum": [
        "OV"
      ]
    },
    "status": {
      "type": "string",
      "description": "The current state of the project",
      "enum": [
        "Concept"
      ]
    },
    "source": {
      "type": "string",
      "description": "The source application the request was sent from"
    },
    "wip": {
      "type": "boolean",
      "description": "Whether or not the request should be sent to produce output. If true, the request won't be sent and is merely stored for later retrieval"
    },
    "outputLocations": {
      "type": "object",
      "description": "The locations where the output of a projectconfiguration are sent to",
      "required": [
        "trimble",
        "azureBlob"
      ],
      "properties": {
        "trimble": {
          "type": "boolean",
          "description": "Indicates whether the output is posted to Trimble"
        },
        "azureBlob": {
          "type": "boolean",
          "description": "Indicates whether the output is posted to Azure Blobstorage"
        }
      },
      "additionalProperties": false
    },
    "company": {
      "type": "object",
      "description": "Company information that should be visible on the output",
      "required": [
        "logo",
        "name",
        "email",
        "visitingAddress",
        "correspondenceAddress",
        "website",
        "phone"
      ],
      "properties": {
        "logo": {
          "type": "string",
          "description": "The logo that will be used on all 2D output",
          "enum": [
            "boele_en_van_eesteren",
            "digibase",
            "goossen_te_pas_bouw",
            "stam_de_koning"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the company that can be approached for questions about this projectconfiguration"
        },
        "email": {
          "type": "string",
          "description": "Email of the company that can be approached for questions about this projectconfiguration"
        },
        "website": {
          "type": "string",
          "description": "Email of the company that can be approached for questions about this projectconfiguration"
        },
        "phone": {
          "type": "string",
          "description": "Email of the company that can be approached for questions about this projectconfiguration"
        },
        "visitingAddress": {
          "type": "object",
          "required": [
            "streetName",
            "streetNumber",
            "zipCode",
            "city"
          ],
          "properties": {
            "streetName": {
              "type": "string"
            },
            "streetNumber": {
              "type": "string"
            },
            "zipCode": {
              "type": "string"
            },
            "city": {
              "type": "string"
            }
          }
        },
        "correspondenceAddress": {
          "type": "object",
          "required": [
            "streetName",
            "streetNumber",
            "zipCode",
            "city"
          ],
          "properties": {
            "streetName": {
              "type": "string"
            },
            "streetNumber": {
              "type": "string"
            },
            "zipCode": {
              "type": "string"
            },
            "city": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "configuration": {
      "type": "object",
      "required": [
        "contact",
        "blocks",
        "exportFileTypes"
      ],
      "properties": {
        "contact": {
          "type": "string",
          "description": "Name of the contact that can be approached for questions about this projectconfiguration"
        },
        "exportFileTypes": {
          "type": "object",
          "description": "The desired output fileformats for each of the steps in a projectconfiguration",
          "required": [
            "house",
            "block",
            "project"
          ],
          "properties": {
            "house": {
              "type": "array",
              "description": "The output fileformats for the houses in a projectconfiguration",
              "items": {
                "type": "string",
                "enum": [
                  "RVT",
                  "IFC",
                  "PDF",
                  "DWG"
                ]
              }
            },
            "block": {
              "type": "array",
              "description": "The output fileformats for the blocks in a projectconfiguration",
              "items": {
                "type": "string",
                "enum": [
                  "RVT",
                  "IFC",
                  "PDF",
                  "DWG"
                ]
              }
            },
            "project": {
              "type": "array",
              "description": "The output fileformats for the entire project in a projectconfiguration",
              "items": {
                "type": "string",
                "enum": [
                  "RVT",
                  "IFC"
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "blocks": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": [
              "name",
              "architect",
              "position",
              "rotation",
              "houses"
            ],
            "properties": {
              "name": {
                "type": "string",
                "default": "A",
                "examples": [
                  "A",
                  "B",
                  "C",
                  "D"
                ],
                "pattern": "^(.*)$"
              },
              "architect": {
								"type": "string",
								"description": "The company that designed this block"
							},
              "position": {
                "type": "object",
                "required": [
                  "x",
                  "z",
                  "y"
                ],
                "properties": {
                  "x": {
                    "type": "number",
                    "default": 0
                  },
                  "y": {
                    "type": "number",
                    "default": 0
                  },
                  "z": {
                    "type": "number",
                    "default": 0,
                    "enum": [
                      0
                    ]
                  }
                }
              },
              "rotation": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "x",
                      "y",
                      "z"
                    ]
                  },
                  {
                    "type": "number"
                  }
                ],
                "properties": {
                  "x": {
                    "type": "number",
                    "default": 0,
                    "examples": [
                      1
                    ]
                  },
                  "y": {
                    "type": "number",
                    "default": 0,
                    "examples": [
                      0
                    ]
                  },
                  "z": {
                    "type": "number",
                    "default": 0
                  }
                }
              },
              "houses": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "houseNumber",
                    "type",
                    "configOptions"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "default": "",
                      "examples": [
                        "HouseName"
                      ],
                      "pattern": "^(.*)$"
                    },
                    "houseNumber": {
                      "type": "integer",
                      "default": 0,
                      "examples": [
                        1
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "The type this house has (this correlates to what typeconfiguration is used)",
                      "enum": [
                        "B"
                      ],
                      "pattern": "^(.*)$"
                    },
                    "configOptions": {
                      "type": "object",
                      "description": "A dictionary of the configuration (choices) in this house (it is based on the typeconfiguration)",
                      "minProperties": 1,
                      "patternProperties": {
                        "^.*$": {
                          "type": "string"
                        }
                      }
                    },
                    "overrides": {
                      "type": "object",
                      "description": "A collection of overrides that allows the request to override data that would otherwise be retrieved from a typeconfiguration",
                      "required": [
                        "modelElements"
                      ],
                      "properties": {
                        "modelElements": {
                          "type": "object",
                          "description": "Overrides that have to do with modelelements and their model",
                          "minProperties": 1,
                          "patternProperties": {
                            "^.*$": {
                              "type": "object",
                              "required": [
                                "model"
                              ],
                              "properties": {
                                "model": {
                                  "type": "string",
                                  "description": "Specifies a model to use instead of the model that would be retrieved from a typeconfiguration"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "facadeConfigurations": {
											"type": "object",
											"description": "Lists the facades (modelelements) that should be configured with the indicated facadeconfiguration",
											"minProperties": 1,
											"patternProperties": {
												"^.*$": {
													"type": "string"
												}
											}
										}
                  }
                }
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}